! =====================================================================
! Some part of this property file is inspired from the following article:
! Don't Use System.out.println! (available at http://www.vipan.com)
! =====================================================================

! ------------------------------
! Set rootLogger
! Set the Threshold to [ALL|OFF|INFO|WARN|DEBUG|ERROR|FATAL]
! ------------------------------
log4j.rootLogger=ALL, RUNTIME
log4j.appender.RUNTIME.Threshold=ALL

! ------------------------------
! Print only messages of level WARN or above in
! the package net.sf.zekr
! ------------------------------
#log4j.logger.net.sf.zekr=FATAL
log4j.logger.javazoom=WARN

! ------------------------------
! Set logger type to file log (other options are ConsoleAppender, SMTPAppender, 
! SocketAppender, NTEventLogAppender, ...
! ------------------------------
log4j.appender.RUNTIME=org.apache.log4j.RollingFileAppender
#log4j.appender.RUNTIME=org.apache.log4j.net.SMTPAppender

! ------------------------------
! Setup file name and max size
! ------------------------------
log4j.appender.RUNTIME.File=${zekr.home}/zekr.log
log4j.appender.RUNTIME.Encoding=UTF-8
log4j.appender.RUNTIME.MaxFileSize=400KB

! ------------------------------
! Keep two backup file
! ------------------------------
log4j.appender.RUNTIME.MaxBackupIndex=2

! ------------------------------
! Set the layout
! ------------------------------
log4j.appender.RUNTIME.layout=org.apache.log4j.PatternLayout


!-----------------------------------------------------------------------------!
!                          PATTERN FORMATS GLOSSARY                           !
!-----------------------------------------------------------------------------!
! %n - newline                                                                !
! %m - your log message                                                       !
! %p - message priority (FATAL, ERROR, WARN, INFO, DEBUG or custom)           !
! %r - millisecs since program started running                                !
! %% - percent sign in output                                                 !
!                                                                             !
!-----------------------SOME MORE CLUTTER IN YOUR LOG-------------------------!
! %c - name of your category (logger), %c{2} will outputs last two components !
! %t - name of current thread                                                 !
! %x - Nested Diagnostic Context (NDC) (you supply it!)                       !
!                                                                             !
!-------------------------SLOW PERFORMANCE FORMATS----------------------------!
! %d - date and time, also %d{ISO8601}, %d{DATE}, %d{ABSOLUTE},               !
!        %d{HH:mm:ss,SSS}, %d{dd MMM yyyy HH:mm:ss,SSS} and so on             !
! %l - Shortcut for %F%L%C%M                                                  !
! %F - Java source file name                                                  !
! %L - Java source line number                                                !
! %C - Java class name, %C{1} will output the last one component              !
! %M - Java method name                                                       !
!                                                                             !
!------------------------------FORMAT MODIFIERS-------------------------------!
! %-any_letter_above - Left-justify in min. width (default is right-justify)  !
! %20any_letter_above - 20 char. min. width (pad with spaces if reqd.)        !
! %.30any_letter_above - 30 char. max. width (truncate beginning if reqd.)    !
! %-10.10r - Example.  Left-justify time elapsed within 10-wide field.        !
!              Truncate from beginning if wider than 10 characters.           !
!-----------------------------------------------------------------------------!

log4j.appender.RUNTIME.layout.ConversionPattern=%d{HH:mm:ss} [%p] (%c{1}:%L) - %m%n
#log4j.appender.RUNTIME.layout.ConversionPattern=%-5r %-5p - %m%n
! This one is good for debug
#log4j.appender.RUNTIME.layout.ConversionPattern=%-5p [%t] (%F:%L) - %m%n
